# github中提交该配置文件，对一些隐私信息加密
# 主配置文件新增配置，该配置文件也新增。
spring.profiles.active=dev

# github的client_id
# GitHub 应用程序 的客户端 ID。
github.client_id=xxxxx
# github的client_secret
# GitHub 应用程序 的客户端密钥。
github.client_secret=xxxxxxxxxxxxxxxxxx
# github的redirect_uri
# 获得授权后被发送到的应用程序中的 URL。
github.redirect_uri=http://localhost:8080/callback
# github获取access_token的uri，方法为POST
github.token_uri=https://github.com/login/oauth/access_token
# github获取user的uri
github.user_uri=https://api.github.com/user

# QQ邮箱配置
# 发送邮件服务器
spring.mail.host=smtp.qq.com
# 发送邮件服务器端口，可以是465或者587
spring.mail.port=465
# QQ邮箱用户名
spring.mail.username=xxxx@qq.com
# QQ邮箱密码，这里第三方登录需要使用授权码。
spring.mail.password=xxxxxxx
# 默认编码
spring.mail.default-encoding=utf-8
# 使用ssl连接发送邮箱服务器
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
# 开启debug，方便查看邮件发送日志
spring.mail.properties.mail.debug=true

# 移除spring boot启动时输出的多余的日志
logging.level.org.springframework.boot.autoconfigure=error
# 移除启动时thymeleaf多余的日志
logging.level.org.thymeleaf=info

# 数据库
spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521/orcl
    # 为了让虚拟机连接
#spring.datasource.url=jdbc:oracle:thin:@192.168.44.1:1521/orcl
spring.datasource.username=xxx
spring.datasource.password=xxx
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver

# thymeleaf配置
spring.thymeleaf.encoding=utf-8
#spring.thymeleaf.mode=HTML5
# LEGACYHTML5表示经典html5模式，即允许非严格的html出现，元素少点什么也可以编译通过，
# 这个比较符合大家的编写习惯，太过严格的html，写起来累。
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
#spring.mvc.static-path-pattern=/**
# 建议将该属性设置为 false
spring.thymeleaf.cache=false

# 域名地址
bbs.domain=http://localhost:8080

# mybatis扫描
mybatis.mapper-locations= classpath:com/nexus/mapper/*.xml

## pageHelper配置
#pagehelper.helper-dialect=oracle
## 对象中根据据属性名取值，
## 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值，
## 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
#pagehelper.params=count=countSql
#    # 分页合理化参数，默认值为false。
#    # 当该参数设置为 true 时，
#    # pageNum<=0 时会查询第一页，
#    # pageNum>pages（超过总数时），会查询最后一页。
#    # 默认false 时，直接根据参数进行查询。
#pagehelper.reasonable=true
## 默认false,分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
#pagehelper.support-methods-arguments=true

